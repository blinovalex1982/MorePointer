#include <iostream>
int main() {
	setlocale(LC_ALL, "RU");
	int n, m;


	// Нейтральный адрес
	int* pointer;

		pointer = NULL;

		pointer = nullptr; // самый эффективный и правильный способ
		if (pointer != nullptr)
			std::cout << pointer << std::endl;
		else
			std::cout << "Указатель не инициализирован\n";

	// Модификация доступа указателей
	n = 7;
	// Указатель на константу. Может быть обьявлен не инициализированным и перенапрвляться на другие области памяти
	// но с его помощью НЕВОЗМОЖНО поменять значение памяти, на которую он напрвлен.
	const int* pn1;
	pn1 = &n;
	//*pn1 = 5;// ОШИБКА!
	std::cout << *pn1 << std::endl;


	// Константный указатель или указатель - константа
	// Не может быть объявлен без инициализации и не может
	// быть перенаправлен на другие области памяти, 
	// но с его помощью МОЖНО менять память на которую он направлен.
	int* const pn2 = &n;
	//pn2 = &m;// ОШИБКА!
	*pn2 = 15;
	std::cout << *pn2 << std::endl;
	// Константный указатель на константу. Не может быть объвлен без инициализации
	// и не может быть перенаправлен на другую область памяти.
	// С его помощью также НЕВОЗМОЖНО МЕНЯТЬ ПАМЯТЬ на которую он направлен.
	const int* const pn3 = &n;
	//pn3 = &m; // ОШИБКА!
	//*pn3 = 42; // ОШИБКА!
	std::cout << *pn3 << std::endl;

	return 0;
}